module Demo where

----------------------------------------------------------------------------------------------------------------
meanList :: [Double] -> Double
meanList = (uncurry (/)) . foldr (\x s -> (fst s + x,snd s + 1)) (0,0)
----------------------------------------------------------------------------------------------------------------
evenOnly :: [a] -> [a]
evenOnly = (map snd) . (filter (even . fst)) . (zip [1..])
----------------------------------------------------------------------------------------------------------------
evenOnly :: [a] -> [a]
evenOnly = (map snd) . (filter (even . fst)) . zip [1..]
----------------------------------------------------------------------------------------------------------------
